#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ EpsToTxt2
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import os

def test_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    print("üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python...")
    version = sys.version_info
    print(f"   Python {version.major}.{version.minor}.{version.micro}")
    
    if version.major < 3 or (version.major == 3 and version.minor < 7):
        print("   ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ!")
        return False
    else:
        print("   ‚úÖ –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç")
        return True

def test_basic_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫"""
    print("\nüìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫...")
    
    tests = [
        ("numpy", "NumPy"),
        ("PIL", "Pillow (PIL)"),
        ("pylibdmtx.pylibdmtx", "pylibdmtx"),
    ]
    
    success = True
    for module, name in tests:
        try:
            __import__(module)
            print(f"   ‚úÖ {name}")
        except ImportError as e:
            print(f"   ‚ùå {name} - {e}")
            success = False
    
    return success

def test_gui_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ GUI –±–∏–±–ª–∏–æ—Ç–µ–∫"""
    print("\nüñ•Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ GUI –±–∏–±–ª–∏–æ—Ç–µ–∫...")
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º PyQt5
    try:
        from PyQt5.QtWidgets import QApplication
        from PyQt5.QtCore import Qt
        from PyQt5.QtGui import QFont
        print("   ‚úÖ PyQt5")
        return True, "PyQt5"
    except ImportError:
        print("   ‚ùå PyQt5 –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü–æ—Ç–æ–º –ø—Ä–æ–±—É–µ–º PyQt6
    try:
        from PyQt6.QtWidgets import QApplication
        from PyQt6.QtCore import Qt
        from PyQt6.QtGui import QFont
        print("   ‚úÖ PyQt6")
        return True, "PyQt6"
    except ImportError:
        print("   ‚ùå PyQt6 –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("   ‚ùå –ù–∏ PyQt5, –Ω–∏ PyQt6 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
    return False, None

def test_main_module():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è"""
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è...")
    
    try:
        from main import parse_eps_to_matrix, decode_datamatrix, clear_cache
        print("   ‚úÖ main.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ main.py: {e}")
        return False

def test_gui_module():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ GUI –º–æ–¥—É–ª—è"""
    print("\nüé® –ü—Ä–æ–≤–µ—Ä–∫–∞ GUI –º–æ–¥—É–ª—è...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –∏–º–ø–æ—Ä—Ç, –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º GUI
        import gui_main
        print("   ‚úÖ gui_main.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ gui_main.py: {e}")
        return False

def test_directories():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫"""
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫...")
    
    required_dirs = ["In", "Out"]
    success = True
    
    for dir_name in required_dirs:
        if os.path.exists(dir_name):
            print(f"   ‚úÖ –ü–∞–ø–∫–∞ {dir_name}/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"   ‚ö†Ô∏è –ü–∞–ø–∫–∞ {dir_name}/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞—é...")
            try:
                os.makedirs(dir_name, exist_ok=True)
                print(f"   ‚úÖ –ü–∞–ø–∫–∞ {dir_name}/ —Å–æ–∑–¥–∞–Ω–∞")
            except Exception as e:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É {dir_name}/: {e}")
                success = False
    
    return success

def test_optional_tools():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
    print("\nüõ†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
    
    try:
        import PyInstaller
        print(f"   ‚úÖ PyInstaller {PyInstaller.__version__}")
    except ImportError:
        print("   ‚ö†Ô∏è PyInstaller –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω—É–∂–µ–Ω –¥–ª—è —Å–±–æ—Ä–∫–∏ exe)")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 60)
    print("üß™ –¢–ï–°–¢ –£–°–¢–ê–ù–û–í–ö–ò EpsToTxt2")
    print("=" * 60)
    
    all_tests = [
        test_python_version(),
        test_basic_imports(),
        test_main_module(),
        test_directories(),
    ]
    
    gui_success, gui_lib = test_gui_imports()
    all_tests.append(gui_success)
    
    if gui_success:
        all_tests.append(test_gui_module())
    
    test_optional_tools()
    
    print("\n" + "=" * 60)
    if all(all_tests):
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
        print("   ‚Ä¢ –ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: python main.py")
        if gui_success:
            print("   ‚Ä¢ GUI –≤–µ—Ä—Å–∏—è: python gui_main.py")
            print(f"   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {gui_lib}")
        print("   ‚Ä¢ –°–±–æ—Ä–∫–∞ exe: python build_exe.py")
    else:
        print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        print("=" * 60)
        print("\nüîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print("   pip install -r requirements.txt")
        if not gui_success:
            print("   pip install PyQt5")
        print("\nüìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ñ–∞–π–ª–µ TROUBLESHOOTING.md")
    
    print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:")
    print(f"   ‚Ä¢ Python: {sys.version}")
    print(f"   ‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {sys.platform}")
    print(f"   ‚Ä¢ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {os.getcwd()}")

if __name__ == "__main__":
    main()
